#include"/home/farhan/Desktop/uzi/header/stdtype.h"
#include"/home/farhan/Desktop/uzi/header/stdgr.h"

uint16_t charAttribute;
uint8_t xCursor=0,yCursor=0;
uint16_t *vidMem = (uint16_t *)0xB8000; 		/* pointer to video memory */

//background color
void setBkgColor(uint8_t color){
	charAttribute=0x0000;
	charAttribute|=color<<12;
}

//foreground color
void setCharColor(uint8_t color){
	charAttribute|=color<<8;
}

void gotoXY(int x,int y){
	if(xCursor<=80) xCursor=x;
	if(yCursor<=25) yCursor=y;
}

void clearScreen(){
	gotoXY(0,0);
	int i;
	for(i=0;i<SCREEN_MAX_CHAR;++i){		
    		putc(' ');
	}
	gotoXY(0,0);
}

void putc(uint8_t ch){
	uint16_t *pos;
	uint16_t i;
	if(ch=='\n'){
		xCursor=0;
		yCursor++;
	}
	else if(ch>=' '){
		pos=vidMem+(yCursor*SCREEN_WIDTH+xCursor);	//offset: yCursor*SCREEN_WIDTH+xCursor relative to vidMem(base address)
		*pos=ch|charAttribute;
		xCursor++;
		if(xCursor>=80){
			xCursor=0;
			yCursor++;
		}
	}
	/**else if(yCursor>24){
		for(i=0;i<24*80;i++){
			vidMem[i]=vidMem[i+80];
		}
		vidMem[24*80]=' ';
		yCursor=24;
	}**/
	updateCursor(yCursor,xCursor);
}

void puts(char *msg){
	while(*msg) putc(*msg++);
}

void updateCursor(uint8_t y,uint8_t x){
	uint16_t  location;
	uint16_t  port;
	uint8_t   data;

	location=(x+y*SCREEN_WIDTH);
//set current cursor position
	port=0x03D4;
	data=0x0f;
	outputPort8(port,data);
	port=0x03D5;
	data=(uint8_t)location;
	outputPort8(port,data);
	
	port=0x03D4;
	data=0x0e;
	outputPort8(port,data);
	port=0x03D5;
	data=(uint8_t)(location>>8);
	outputPort8(port,data);
}

void putcXY(uint8_t ch,uint16_t x,uint16_t y){
	gotoXY(x,y);
	putc(ch);
}

void putsXY(char *msg,int x,int y){
	gotoXY(x,y);
	puts(msg);
}
